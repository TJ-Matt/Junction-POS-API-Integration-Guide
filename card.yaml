swagger: '2.0'
info:
  version: 1.0.0
  title: Junction@POS cards transaction API - New
  description: >-
    The Junction@POS APIs allow for card-based transactions to be peformed by a
    POS. Multiple endpoints are defined depending on what services are required.  APIs, one being card, used to perform a payment, and the
    other being reverse, used to reverse the previously processed transaction. 
    A reversal always refers to the previously processed transaction, while a
    refund is a normal payment transaction type, and can be processed completely
    independently of a purchase transaction.
  contact:
    name: Transaction Junction
    url: 'http://www.transactionjunction.co.za'
    email: info@switch.tj
host: 'localhost:20001'
basePath: /tjpos/v1
schemes:
  - http
  - https
paths:
  /card:
    post:
      tags:
        - card
      description: Use this API path to perform a card transaction
      parameters:
        - in: body
          name: card_req
          schema:
            $ref: '#/definitions/CardReq'
      responses:
        '200':
          description: >-
            Successful response. This does not necessarily indicate transaction
            approval, but that the request was successfully processed.  The JSON
            body contains data elements indicating the transaction outcone.
          schema:
              $ref: '#/definitions/CardRsp'
        '400':
          description: >-
            The transaction has been declined due to message format errors. 
            This implies that a field or fields have been incorrectly specified.
          schema:
              $ref: '#/definitions/CardRsp'
        '500':
          description: >-
            Transaction declined due to internal errors in Junction@POS. 
            Inspect the log to determine the nature of the error.
          schema:
              $ref: '#/definitions/CardRsp'
  /reverse:
    post:
      tags:
        - card
      description: >-
        Optionally reverse a previous transaction.  Note that the original
        reference must be the same value as the reference of the transaction
        being reversed.  Reversals should only be implemented for timeout
        conditions, i.e. where the POS times out before receiving a response
        from Junction@POS.
      parameters:
        - in: body
          name: finalise
          schema:
            $ref: '#/definitions/ReverseReq'
      responses:
        '200':
          description: >-
            Successful response. This does not necessarily indicate transaction
            approval, but that the request was successfully processed.  The JSON
            body contains data elements indicating the transaction outcone.
          schema:
              $ref: '#/definitions/ReverseRsp'
        '400':
          description: >-
            The transaction has been declined due to message format errors. 
            This implies that a field or fields have been incorrectly specified.
          schema:
              $ref: '#/definitions/ReverseRsp'
        '500':
          description: >-
            Transaction declined due to internal errors in Junction@POS. 
            Inspect the log to determine the nature of the error.
          schema:
              $ref: '#/definitions/ReverseRsp'
  /token:
    post:
      tags:
        - card
      description: Use this API path to perform a token transaction such as a Masterpass QR code or an alternative string type token. Only transaction type 50 will currently be accepted.
      parameters:
        - in: body
          name: token_req
          schema:
            $ref: '#/definitions/TokenReq'
      responses:
        '200':
          description: >-
            Successful response. This does not necessarily indicate transaction
            approval, but that the request was successfully processed.  The JSON
            body contains data elements indicating the transaction outcone.
          schema:
              $ref: '#/definitions/TokenRsp'
        '400':
          description: >-
            The transaction has been declined due to message format errors. 
            This implies that a field or fields have been incorrectly specified.
          schema:
              $ref: '#/definitions/TokenRsp'
        '500':
          description: >-
            Transaction declined due to internal errors in Junction@POS. 
            Inspect the log to determine the nature of the error.
          schema:
              $ref: '#/definitions/TokenRsp'
  /voucher:
    post:
      tags:
        - card
      description: Use this API path to request airtime voucher
      parameters:
        - in: body
          name: airtime_req
          schema:
            $ref: '#/definitions/AirtimeReq'
      responses:
        '200':
          description: >-
            Successful response. This does not necessarily indicate transaction
            approval, but that the request was successfully processed.  The JSON
            body contains data elements indicating the transaction outcone.
          schema:
              $ref: '#/definitions/AirtimeRsp'
        '400':
          description: >-
            The transaction has been declined due to message format errors. 
            This implies that a field or fields have been incorrectly specified.
          schema:
              $ref: '#/definitions/AirtimeRsp'
        '500':
          description: >-
            Transaction declined due to internal errors in Junction@POS. 
            Inspect the log to determine the nature of the error.
          schema:
              $ref: '#/definitions/AirtimeRsp'
  /voucher/digital_voucher:
    post:
      tags:
        - card
      description: Use this API path to request voucher
      parameters:
        - in: body
          name: voucher_req
          schema:
            $ref: '#/definitions/VoucherReq'
      responses:
        '200':
          description: >-
            Successful response. This does not necessarily indicate transaction
            approval, but that the request was successfully processed.  The JSON
            body contains data elements indicating the transaction outcone.
          schema:
              $ref: '#/definitions/VoucherRsp'
        '400':
          description: >-
            The transaction has been declined due to message format errors. 
            This implies that a field or fields have been incorrectly specified.
          schema:
              $ref: '#/definitions/VoucherRsp'
        '500':
          description: >-
            Transaction declined due to internal errors in Junction@POS. 
            Inspect the log to determine the nature of the error.
          schema:
              $ref: '#/definitions/VoucherRsp'
  /efuel:
    post:
      tags:
        - card
      description: Use this API path to perform a efuel transaction.
      parameters:
        - in: body
          name: efuel_req
          schema:
            $ref: '#/definitions/eFuelReq'
      responses:
        '200':
          description: >-
            Successful response. This does not necessarily indicate transaction
            approval, but that the request was successfully processed.  The JSON
            body contains data elements indicating the transaction outcone.
          schema:
              $ref: '#/definitions/eFuelRsp'
        '400':
          description: >-
            The transaction has been declined due to message format errors. 
            This implies that a field or fields have been incorrectly specified.
          schema:
              $ref: '#/definitions/eFuelRsp'
        '500':
          description: >-
            Transaction declined due to internal errors in Junction@POS. 
            Inspect the log to determine the nature of the error.
          schema:
              $ref: '#/definitions/eFuelRsp'
  /admin:
    post:
      tags:
        - card
      description:
        - Use this path for admininstrative requests
      parameters:
        - in: body
          name: admin_req
          schema:
            $ref: '#/definitions/AdminReq'
      
      responses:
        '200':
          description: >-
            Successful response. This does not necessarily indicate transaction
            approval, but that the request was successfully processed.  The JSON
            body contains data elements indicating the transaction outcone.
          schema:
              $ref: '#/definitions/AdminRsp'
        '400':
          description: >-
            The transaction has been declined due to message format errors. 
            This implies that a field or fields have been incorrectly specified.
          schema:
              $ref: '#/definitions/AdminRsp'
        '500':
          description: >-
            Transaction declined due to internal errors in Junction@POS. 
            Inspect the log to determine the nature of the error.
          schema:
              $ref: '#/definitions/AdminRsp'
definitions:
  Req:
    description: Ancestor type of all requests.
    type: object
  Rsp:
    description: Ancestor type of all responses.
    type: object
    required:
      - response_code
    properties:
      response_code:
        description: response code
        $ref: '#/definitions/ResponseCode'
      response_text:
        $ref: '#/definitions/ResponseText'
  TranReq:
    allOf:
      - $ref: '#/definitions/Req'
      - type: object
        required:
         - reference
         - pos
         - store
         - chain
         - tran
        properties:
         reference:
           $ref: '#/definitions/Reference'
         pos:
           $ref: '#/definitions/Pos'
         store:
           $ref: '#/definitions/Store'
         chain:
           type: string
           pattern: '([a-zA-Z0-9\x20]){1,4}'
         tran:
           $ref: '#/definitions/Tran'
         amount:
           $ref: '#/definitions/Amount'
           description: >-
             The total transaction amount requested by the POS. This should be the total amount including cash if applicable.
         routeID:
           $ref: '#/definitions/RouteID'
         data:
           $ref: '#/definitions/Data'
  TranRsp:
    allOf:
      - $ref: '#/definitions/Rsp'
      - type: object
        required:
          - amount
          - reference
          - pos
          - store
        properties:
          authID:
            $ref: '#/definitions/AuthID'
          amount:
            $ref: '#/definitions/Amount'
            description: >-
              The total transaction amount requested by the POS. This includes the cash amount if the customer elected to perform cash back.
          reference:
            $ref: '#/definitions/Reference'
          pos:
            $ref: '#/definitions/Pos'
          store:
            $ref: '#/definitions/Store'
          merchant_id:
            $ref: '#/definitions/Store'
          tran:
            $ref: '#/definitions/Tran'
          rrn:
            type: string
            pattern: '([A-Za-z0-9]){12}'
          data:
            $ref: '#/definitions/Data'
  ACardRsp:
    allOf:
      - $ref: '#/definitions/TranRsp'
      - type: object
        properties:
          card:
            type: string
            pattern: '([0-9]{6}[*]{2,9}[0-9]{4})'
            description: >-
              The card number, masked.  First 6 and last 4 digits are visible, with
              all intervening numbers replaced with a * character.
          card_name:
            type: string
          message:
            type: string
            minLength: 0
            maxLength: 60
            description: >-
              Vendor-specific message pertaining to transaction.
          tip:
            $ref: '#/definitions/Amount'
            description: >-
              This contains the tip amount if the customer elected to tip.
          seq:
            type: string
            pattern: '([0-9]){6}'
          sign:
            type: boolean
            description: Contains an indication of whether a cardholder signature is required.
  CardReq:
    allOf:
      - $ref: '#/definitions/TranReq'
      - type: object
        properties:
         cash:
           $ref: '#/definitions/Amount'
           description: >-
             The cash amount requested. Only used for cash withdrawal and cash back transaction types.
             In the case of cash withdrawal, the amount field or the cash field can be set.
         basket:
           description: >-
             A data element that allows specification of multiple basket items,
             containing items purchased during the transaction.  Each item contains
             a barcode identifying the stock item, quantity of stock items and
             price per individual stock item.
           type: array
           items:
             type: object
             properties:
               barcode:
                 type: string
               quantity:
                 type: integer
               unitprice:
                 type: integer

  CardRsp:
    allOf:
      - $ref: '#/definitions/ACardRsp'
      - type: object
        properties:
          auth_profile:
            type: string
            description: 'Authorisation profile which is received from response'
          referral:
            type: integer
            description: 'Set to 1 when a timeout response was received from the switch' 
          cash:
            $ref: '#/definitions/Amount'
            description: >-
              This contains the cash amount if the customer elected to perform cash back or if a cash withdrawal or cash back transaction was performed.
          account_balance:
            $ref: '#/definitions/Amount'
            description: >-
              This contains the amount amount of credit used when a payment transaction was performed. This will only be populated if supported by the provider.
          credit_available:
            $ref: '#/definitions/Amount'
            description: >-
              This contains the amount available to spend when a payment transaction was performed. This will only be populated if supported by the provider.
          transaction_fee:
            $ref: '#/definitions/Amount'
            description: >-
              This contains the transaction fee amount when the push funds request is performed.
          vat:
            $ref: '#/definitions/Amount'
            description: >-
              This contains VAT on the transaction fee amount when push funds request is perfomed.
          approved:
            $ref: '#/definitions/Amount'
            description: >-
              This contains approved amount which taken from the amount type field in the additional amounts (field 54) field.
          ledger_balance:
            $ref: '#/definitions/Amount'
            description: >-
              This contains ledger balance amount which taken from the amount type field in the additional amounts (field 54) field.
          available_balance:
            $ref: '#/definitions/Amount'
            description: >-
              This contains available balance amount which taken from the amount type field in the additional amounts (field 54) field.
          ext_payment:
            type: string
            description: 'The number of months of the budget period'
          acc_type:
            type: string
            description: 'It is the description of the account type'
          card_entry:
            type: string
            enum:
              - C
              - I
              - S
              - M
            description: |
              Indicates the method used to capture card data.  Valid values are: 
              * C - chip tap (contactless card); 
              * I - chip insert (contact card); 
              * S - magnetic stripe swipe; 
              * M - manual entry
          card_pin:
            type: string
            pattern: '([0-9]{,5})'
            description: >-
              Clear PIN associated with card e.g. in case of giftcard Issue
          cryptogram_type:
            type: string
            enum:
              - TC
              - ARQC
              - AAC
              - AAR
            description: >-
              Contains an indicator of the cryptogram type.  This should be printed
              on the receipt, as received.  
          cryptogram:
            type: string
            pattern: '([0-9A-Fa-f]){16}'
            description: 'Contains the cryptogram, must be printed on the receipt'
          apl:
            type: string
            pattern: '([A-Za-z0-9\x20]){1,16}'
            description: 'Application label of the ICC, must be printed on the receipt'
          tvr:
            type: string
            pattern: '([0-9A-Fa-f]){10}'
            description: >-
              Contains the Terminal Verification Results, must be printed on the
              receipt
          aid:
            type: string
            pattern: '([0-9A-Fa-f]){32}'
            description: 'Contains the Application ID, must be printed on the receipt'
          tsi:
            type: string
            pattern: '([0-9A-Fa-f]){10}'
            description: >-
              Contains the Transaction Status Information, must be printed on the
              receipt
          cvm_results:
            type: string
            pattern: '([0-9A-Fa-f]){6}'
            description: >-
              Contains the Cardholder Verification Method Results, must be printed
              on the receipts.
          iad:
            type: string
            pattern: '([0-9A-Fa-f]{16})|([0-9A-Fa-f]{32})'
            description: >-
              Contains Issuer Authentication Data and must be printed on the
              receipts.
          pin_statement:
            type: string
            minLength: 1
            maxLength: 30
            description: >-
              Contains a statement regarding PIN verification, must be printed on
              the receipt if received
          receipt:
            description: >-
              A number of items in an array that should be printed on the receipt. 
              The order in which items must be printed is dictated by the id
              property.
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                text:
                  type: string
      
  ReverseReq:
    allOf:
      - $ref: '#/definitions/Req'
      - type: object
        required:
         - reference
         - original_reference
        properties:
         reference:
           $ref: '#/definitions/Reference'
         original_reference:
           $ref: '#/definitions/Reference'
  ReverseRsp:
    allOf:
      - $ref: '#/definitions/Rsp'
      - type: object
        required:
          - reference
        properties:
          reference:
            $ref: '#/definitions/Reference'
  TokenReq:
    allOf:
      - $ref: '#/definitions/TranReq'
      - type: object
        properties:
         basket:
           description: >-
             A data element that allows specification of multiple basket items,
             containing items purchased during the transaction.  Each item contains
             a barcode identifying the stock item, quantity of stock items and
             price per individual stock item.
           type: array
           items:
             type: object
             properties:
               barcode:
                 type: string
               quantity:
                 type: integer
               unitprice:
                 type: integer
  TokenRsp:
    allOf:
      - $ref: '#/definitions/TranRsp'
      - type: object
        properties:
          tip:
            $ref: '#/definitions/Amount'
            description: >-
              This contains the tip amount if the customer elected to tip.
          seq:
            type: string
            pattern: '([0-9]){6}'
          receipt:
            description: >-
              A number of items in an array that should be printed on the receipt. 
              The order in which items must be printed is dictated by the id
              property.
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                text:
                  type: string
  AirtimeReq:
    allOf:
      - $ref: '#/definitions/TranReq'
      - type: object
        required:
         - productID
         - networkID
        properties:
         productID:
           type: string
           minLength: 0
           maxLength: 50
           description: >-
             For fixed denomination vouchers, the productID value
             represents the voucher denomination requested e.g.
             MTN30. A list of valid productID's will be supplied as
             required. For variable denomination requests the productID
             value should be set to the networkID of the Mobile
             operator as follows
             1 : Vodacom
             2 : MTN
             3 : Cell C
             4 : Telkom Mobile
         networkID:
           type: string
           minLength: 0
           maxLength: 12
           description: >-
             1 : Vodacom
             2 : MTN
             3 : Cell C
             4 : Telkom Mobile
  AirtimeRsp:
    allOf:
      - $ref: '#/definitions/TranRsp'
      - type: object
        required:
          - voucher_pin
          - voucher_serial_number
          - product_name
          - network_name
          - cust_message
        properties:
          voucher_pin:
            type: string
            minLength: 0
            maxLength: 30
            description: >-
              The PIN used to activate the voucher.
          voucher_serial_number:
            type: string
            minLength: 0
            maxLength: 30
            description: >-
              The serial number of the issued voucher
          product_name:
            type: string
            minLength: 0
            maxLength: 50
            description: >-
              The name of the airtime product purchased
          network_name:
            type: string
            minLength: 0
            maxLength: 50
            description: >-
              The name of the mobile operator
          cust_message:
            type: string
            minLength: 0
            maxLength: 50
            description: >-
              A custom message containing instructions to activate the voucher
  eFuelReq:
    allOf:
      - $ref: '#/definitions/TranReq'
      - type: object
        properties:
         original_stan:
           type: string
           description: >-
             original stan is the stan taken from efuel pre-auth response and its used for efuel finalisation.
         original_terminal_id:
           type: string
           description: >-
             original terminal_id is the terminal_id taken from efuel pre-auth response and its used for efuel finalisation.
         basket:
           description: >-
             A data element that allows specification of multiple basket items,
             containing items purchased during the transaction.  Each item contains
             a barcode identifying the stock item, quantity of stock items and
             price per individual stock item.
           type: array
           items:
             type: object
             properties:
               barcode:
                 type: string
               quantity:
                 type: integer
               unitprice:
                 type: integer
         card:
           type: object
           description: >-
             Container for card track information typically associated with efuel transactions
           properties:
             track1:
               type: string
               description: >-
                 Track 1 data 
               minLength: 0
               maxLength: 79
             track2:
               $ref: '#/definitions/Track2'
             vit_data:
               type: string
               description: >-
                 Vehicle inscribed tag data, track2 and odometer information obtained from the efuel ring
               minLength: 0
               maxLength: 48
  eFuelRsp:
    allOf:
      - $ref: '#/definitions/ACardRsp'
      - type: object
        properties:
          receipt:
            description: >-
              A number of items in an array that should be printed on the receipt. 
              The order in which items must be printed is dictated by the id
              property.
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                text:
                  type: string
          allowed_products:
            $ref: '#/definitions/AllowedProducts'
  VoucherReq:
    allOf:
      - $ref: '#/definitions/TranReq'
      - type: object
        required:
         - routeID
        properties:
         serial_number:
           type: string    
           description: >-
             its the value used to identify the prepaid voucher against which to load funds.
         voucher_reference:
           type: string    
           description: >-
             its the value used for referencing a voucher transaction.
         voucher_type:
           type: string    
           description: >-
             voucher type is the vouchers name.
  VoucherRsp:
    allOf:
      - $ref: '#/definitions/TranRsp'
      - type: object
        properties:
          message:
            type: string
            minLength: 0
            maxLength: 60
            description: >-
              Vendor-specific message pertaining to transaction.
          serial_number:
            type: string    
            description: >-
              its the value used to identify the prepaid voucher against which to load funds.
          voucher_reference:
            type: string    
            description: >-
              its the value used for referencing a voucher transaction.
          voucher_pin:
            type: string
            description: >-
              pin of the voucher for voucher transaction.
          balance:
            $ref: '#/definitions/Amount'
            description: >-
              voucher remaining balance.
          product_id:
            type: string
            description: >-
              unique id number for product.
          transaction_unique_identifier:
            type: string
            description: >-
              specify unique id for transaction.
          voucher_number:
            type: string
            description: >-
              specify voucher number.
          product_type:
            type: string
            description: >-
              the type of the product or voucher.
          product_status:
            type: string
            description: >-
              the status of the product active or not active.
          price_to_customer:
            $ref: '#/definitions/Amount'
            description: >-
              price for customer to pay.	
          loaded_amount:
            $ref: '#/definitions/Amount'
            description: >-
              the amount that is loaded to the voucher.
          terms_and_conditions:
            type: string
            description: >-
              the terms and conditions for the product or voucher.
          receipt:
            description: >-
              A number of items in an array that should be printed on the receipt. 
              The order in which items must be printed is dictated by the id
              property.
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                text:
                  type: string
  AdminReq:
    allOf:
      - $ref: '#/definitions/Req'
      - type: object
        required:
         - req_type
         - store
        properties:
         req_type:
           $ref: '#/definitions/AdminReqType'
         store:
           $ref: '#/definitions/Store'
  AdminRsp:
    allOf:
      - $ref: '#/definitions/Rsp'
      - type: object
        required:
        properties:
          devices:
            type: array
            items:
              $ref: '#/definitions/Device'
  Device:
    type: object
    properties:
      pos_id:
        type: string
      name:
        type: string
  AdminReqType:
    type: string
    enum:
      - devices
  Tran:
    type: string
    enum:
      - 00
      - 10
      - 15
      - 20
      - 25
      - 30
      - 35
      - 40
      - 45
      - 50
      - 55
      - 60
      - 65
      - 70
      - 75
      - 80
      - 85
      - 90
    description: |
      Indicates the type of transaction to be performed.
      * 00 - admin
      * 10 - purchase
      * 15 - giftcard reload
      * 20 - return
      * 25 - giftcard issue
      * 30 - deposit
      * 35 - payment
      * 40 - balance enquiry 
      * 45 - payment refund
      * 50 - token
      * 55 - push funds
      * 60 - cash back 
      * 65 - eFuel authorisation
      * 70 - cash withdrawal 
      * 75 - eFuel completion
      * 80 - airtime 
      * 85 - voucher type
      * 90 - loyalty
  Amount:
    description: >
      All amounts are expressed in the minor denomination, e.g. cents.
    type: integer
    minimum: 0
    maximum: 999999999999
  Store:
    type: string
    pattern: '([a-zA-Z0-9\x20]){1..15}'
    description: >-
      Store and Merchant IDs.  When a value is received in the card response
      body for merchant_id, this is the authoriser-allocated merchant ID, and
      should be printed on the receipt.  Best practice is to print the Store and
      Merchant IDs.
  Pos:
    type: string
    pattern: '([a-zA-Z0-9\x20]){8}'
    description: POS terminal ID
  Reference:
    description: >-
      A reference, specified as a UUID according to RFC 4122.  In a finalise
      request, a new reference for the finalisation and the original reference
      from the corresponding card request must be provided.
    type: string
    pattern: >-
      \{{0,1}([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}\}{0,1}){1}
  ResponseCode:
    description: >-
      The outcome of the transaction.  This value should be printed on the
      receipts.  It should also be used to determine the outcome of the
      transaction.
    type: string
    pattern: '([A-Za-z0-9]){2}'
  ResponseText:
    description: >-
      A short explanation of outcome of the transaction. Typically used when
      an error occurs.
    type: string
    minLength: 0
    maxLength: 300
  Data:
    description: >-
      A data element that allows the POS to specify multiple additional data
      elements, each with a key to identify the data element, and a value,
      containing the data value.  This allows the POS to pass and receive data
      for any arbitrary values.  Transaction Junction will occasionally use this
      mechanism for passing additional data elements as required.  These usage
      cases will be provided during the course of an integration project.
    type: array
    items:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
  Track2:
    description: >-
      Track2 data according to specification ISO/IEC 7813. Note that this is in the clear
    type: string
    minLength: 2
    maxLength: 37
    pattern: '^(\d{1,19})(=|D)(\d{4}|D|=)(\d{3}|=|D)(\d*)$'          
  AuthID:
    description: >-
      Authorisation identification response
    type: string
    minLength: 6
    maxLength: 6
  RouteID:
    type: string
    pattern: '([0-9]){1..11}'
    description: >-
      An 11-digit code identifying the host to which a request should be routed. This can be used in cases where there is no card number in the message that can be used for routing.
  AllowedProducts:
    type: object
    description: >-
      Allowed restriction code(s) typically used for efuel authorisations.
    properties:
      nonFuelAmt:
        $ref: '#/definitions/Amount'
        description: >-
          Maximum spend on dry-stock that is permitted by authorisation.
      products:
        type: string
        pattern: '(\\d\\,?){1,}'
        description: >-
          Comma-separated list of product codes permitted by authorisation.
      tankCapacity:
        type: string
        pattern: '([0-9]{,5})'
        description: >-
          Tank capacity of vehicle read from tag or received from authorising entity.
